
#1. Install desktop 16.04 Ubuntu
#2. Disable Network Manager
systemctl status NetworkManager
sudo systemctl stop NetworkManager
sudo systemctl disable NetworkManager

#3. Edit /etc/network/interfaces
ifconfig

echo "Enter the up stream network interface for external network [ex. eno1]: "; read EXT
echo "Enter the down stream interface for internal network [ex. eno2]: "; read INT
echo "Enter static ip address of Internal Network Interface [ex. 10.100.205.2]: "; read INT_ADDR
IFS=':'
array=( $INT_ADDR )
BCAST_ADDR=${array[0:2] + ".255"}

#backup /etc/network/interface file
sudo cp /etc/network/interface /etc/network/interface.orig
cat << CFG | sudo tee /etc/network/interfaces
# interfaces(5) file used by ifup(8) and ifdown(8)
auto lo
iface lo inet loopback

auto $EXT
iface $EXT inet dhcp

auto $INT
iface $INT inet static
    address $INT_ADDR
    netmask 255.255.255.0
    broadcast $BCAST_ADDR
CFG

# Reset network interface
sudo ip addr flush $INT
sudo ip addr flush $EXT
sudo service networking restart 

#4. Check CPU hardware virtualization support
sudo apt install cpu-checker -y

#5. View the expected output, it should be as shown below:
echo " Check if Server is KVM ready !!!"
echo "The output should be as stated below: " 
echo "***************************"
echo "INFO: /dev/kvm exists "
echo "KVM acceleration can be used"
echo "****************************"
read -p "Press [enter] key to continue..."

#6. run kvm verification
kvm-ok

echo "Does the kvm checker has the same output as stated above? [Y/n]: "; read KVM_OK
KVM_OK=$(echo $KVM_OK | awk '{print toupper($0)}')
if [[ KVM_OK == "N" ]]; then exit
fi

#7. Install KVM
echo "kvm packages will now start installing ...."
sudo apt-get install qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils -y

#8. Verify installation
groups                                
#expected output:supermicro adm cdrom sudo dip plugdev lpadmin sambashare
#expected output (after reboot): supermicro adm cdrom sudo dip plugdev lpadmin sambashare libvirtd

sudo virsh list --all                      
#Expected output:
# Id    Name                           State
#----------------------------------------------------

#Check for libvirt-sock file ownership
ls -la /var/run/libvirt/libvirt-sock 
#Expected output: srwxrwx--- 1 root libvirtd 0 Apr 12 09:49 /var/run/libvirt/libvirt-sock

#Check for kvm file ownership
ls -l /dev/kvm
#Expected output: crw-rw----+ 1 root kvm 10, 232 Apr 12 09:49 /dev/kvm

#install Virt Manager
sudo apt-get install virt-manager -y
